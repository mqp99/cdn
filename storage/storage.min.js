class Storage{constructor(e){this.cldisabled=e,this.regexObj=new RegExp("{.*:.*}"),this.getItem=(e=>localStorage.getItem(e)),this.setItem=((e,t)=>localStorage.setItem(e,t)),this.getItemJSON=(e=>JSON.parse(localStorage.getItem(e))),this.setItemJSON=((e,t)=>localStorage.setItem(e,JSON.stringify(t)))}set(e,t){null!==this.getItem(e)?1==this.cldisabled&&console.error(`Sorry, storage key '${e}' has been exist`):void 0===t?1==this.cldisabled&&console.error("Sorry, please enter value storage value is not empty"):this.regexObj.test(JSON.stringify(t))?this.setItemJSON(e,t):this.setItem(e,t)}get(e){if(null!==this.getItem(e))return this.regexObj.test(this.getItem(e))?this.getItemJSON(e)?this.getItemJSON(e):[]:this.getItem(e)?this.getItem(e):[];1==this.cldisabled&&console.error(`Sorry, storage key '${e}' is not exist`)}update(e,t,s){if(null===this.getItem(e))1==this.cldisabled&&console.error(`Sorry, storage key '${e}' is not exist`);else{if(this.regexObj.test(this.getItem(e))){let o=this.getItemJSON(e);o[t]=s,this.setItemJSON(e,o)}else this.setItem(e,t);1==this.cldisabled&&console.log(`Storage key '${e}' has been up to date!`)}}remove(e,t){if(null===this.getItem(e))1==this.cldisabled&&console.error(`Sorry, storage key '${e}' is not exist`);else{if(this.regexObj.test(this.getItem(e))){var s=this.getItemJSON(e);if(0!=this.objLenght(s))for(var o=0;o<this.objLenght(s);o++)return s[t]?(delete s[t],1==this.cldisabled&&console.log(`Storage key '${e}' has been delete '${t}'!`),this.setItemJSON(e,s)):1==this.cldisabled?console.error(`Storage key '${e}' not isset '${t}'!`):""}else if(!1===this.regexObj.test(this.getItem(e))&&void 0===t){confirm(`Storage key '${e}' no keys left, press 'ok' will remove key '${e}'!`)&&localStorage.removeItem(e)}if("{}"===this.getItem(e))confirm(`Storage key '${e}' no keys left, press 'ok' will remove key '${e}'!`)&&localStorage.removeItem(e)}}objLenght(e){var t,s=0;for(t in e)e.hasOwnProperty(t)&&s++;return s}}